"" Given a 32-bit signed integer, reverse digits of an integer.

Note:
Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: 
[âˆ’231,  231 âˆ’ 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows. ""

class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        if x > 0:
            rev = 0
            while(x > 0): 
                a = x % 10
                rev = rev * 10 + a 
                x = x // 10
                
            if abs(rev) > 2**31:
                return 0 
            
            else:
                return rev

        if x < 0:
            x = -1 * x
            rev = 0
            while(x > 0): 
                a = x % 10
                rev = rev * 10 + a 
                x = x // 10
                
            if abs(rev) > 2**31:
                return 0 
            
            else:
                return -1 * rev
    
        if x == 0:
            return x
